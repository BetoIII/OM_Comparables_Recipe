{
  "version": "1.0.0",
  "title": "View Comp Sets - Interactive Comp Set Viewer",
  "description": "View and manage existing comp sets in an interactive HTML interface with full property details, allowing users to edit comp sets, remove properties, and add properties to other comp sets",
  "instructions": "This recipe displays saved comp sets in an interactive HTML viewer. It lists all available comp sets, allows the user to select one, and generates a detailed HTML report showing all properties in that comp set with full property details enriched from the comparables data.\n\nWORKFLOW:\n1. List all available comp sets from the comp_sets/ directory\n2. Present the list to the user and prompt them to select which comp set to view\n3. Load the selected comp set file\n4. Enrich the comp set data by matching property IDs with full property details from output/comparables_data.json\n5. Generate an interactive HTML report at output/view_comp_set_{name}.html using the view_comp_set_template.html\n6. Return the HTML file path as a clickable hyperlink\n\nDATA ENRICHMENT:\n- Read the selected comp set JSON file (contains minimal data: id, name, address)\n- Read the output/comparables_data.json file (contains full property details)\n- Match properties by property_id/id field\n- For properties without matching data, display with 'Data Not Found' warning badge\n- Include all available property details: year built, units, occupancy, amenities, unit mix, etc.\n\nHTML GENERATION:\n1. Read the view_comp_set_template.html file for structure and styling\n2. Create output/view_comp_set_{comp_set_name}.html with:\n   - Comp set name prominently displayed in header\n   - Summary statistics for properties in this comp set\n   - Management toolbar with rename/delete controls\n   - Property cards with full details (enriched from comparables_data.json)\n   - 'Remove from Comp Set' button on each card (red/destructive style)\n   - 'Add to Other Comp Set' functionality preserved from template\n   - 'Data Not Found' warning badges for properties without full data\n   - JavaScript for all interactive features (server communication)\n3. Return the file path as a clickable hyperlink\n\nERROR HANDLING:\n- If no comp sets exist, inform user and suggest running the comparables_search recipe first\n- If comparables_data.json doesn't exist, proceed with minimal data and show warnings\n- If selected comp set is empty, display appropriate message",
  "extensions": [
    {
      "name": "developer",
      "type": "builtin",
      "display_name": "Developer",
      "timeout": 300,
      "bundled": true,
      "description": "Read and analyze files, search codebase, and access project structure"
    },
    {
      "name": "computercontroller",
      "type": "builtin",
      "display_name": "Computer Controller",
      "timeout": 300,
      "bundled": true,
      "description": "Execute terminal commands and control the system"
    },
    {
      "name": "todo",
      "type": "builtin",
      "display_name": "To-Do",
      "timeout": 300,
      "bundled": true,
      "description": "Track task progress and manage to-do lists"
    }
  ],
  "prompt": "Generate an interactive HTML viewer for an existing comp set.\n\nSTEP 1: LIST AVAILABLE COMP SETS\n- Check the comp_sets/ directory for all .json files\n- If no comp sets exist, inform the user: 'No comp sets found. Please run the comparables_search recipe first to extract properties and create comp sets.'\n- If comp sets exist, display a numbered list of all available comp sets\n\nSTEP 2: USER SELECTION\n- Ask the user: 'Which comp set would you like to view? Please enter the number or name.'\n- Wait for user input\n- Validate the selection\n\nSTEP 3: LOAD AND ENRICH DATA\n- Read the selected comp set file from comp_sets/{name}.json\n- Read output/comparables_data.json (if it exists) to get full property details\n- Create a property map from comparables_data.json using property_id as the key\n- For each property in the comp set:\n  * Look up the full property data using the property's 'id' field\n  * If found, use the complete property object with all details\n  * If not found, use the minimal data from the comp set file and set dataNotFound: true flag\n\nSTEP 4: GENERATE HTML REPORT\n- Read view_comp_set_template.html for the HTML structure and styling\n- Generate output/view_comp_set_{comp_set_name}.html with:\n  * Comp set name in the page title and main header\n  * Summary statistics dashboard (total properties, total units, avg year built, avg occupancy)\n  * Sticky management toolbar with:\n    - Comp set name display\n    - Selection counter (e.g., '3 properties selected')\n    - 'Rename Comp Set' button\n    - 'Delete Comp Set' button (with confirmation)\n    - Dropdown to select existing comp sets to add to\n    - Input field for new comp set name (hidden by default, shows when '+ Create new...' is selected)\n    - 'Add Selected to Comp Set' button (green, disabled when no selection)\n    - Server status indicator\n  * Property cards grid with full details for each property:\n    - Checkbox in top-right corner for multi-select (with data-property-id attribute)\n    - Property name and address\n    - Year built, total units, occupancy rate, distance\n    - Property type badge\n    - Amenities list\n    - Unit mix table\n    - Source document\n    - Notes\n    - 'Data Not Found' warning badge (if dataNotFound is true)\n    - 'Remove from {Comp Set Name}' button (red, full-width, calls DELETE /api/comp-sets/{name}/properties/{id})\n  * JavaScript for interactivity:\n    - Server connection check\n    - Rename comp set (calls PUT /api/comp-sets/{name} with newName)\n    - Delete comp set (calls DELETE /api/comp-sets/{name}, shows confirmation)\n    - Remove property from comp set (calls DELETE /api/comp-sets/{name}/properties/{id})\n    - Add to other comp set (calls POST /api/save-comp-set)\n    - Toast notifications for all actions\n    - Confirmation dialogs for destructive actions\n  * Embed the comp set name in JavaScript variables for API calls\n  * All data embedded directly in the HTML (no external API calls for initial load)\n\nSTEP 5: RETURN RESULT\n- Display success message with clickable hyperlink to the generated HTML file\n- Include instructions: 'Make sure the server is running (node server.js) to use interactive features'\n\nNOTES:\n- The HTML should be fully self-contained with all data embedded\n- Server is only needed for editing operations (rename, delete, remove, add to other comp set)\n- Use the same styling and design patterns from sample_html_template.html\n- Preserve all existing functionality while adding new comp set management features",
  "response": {
    "json_schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "type": "object",
    "properties": {
      "comp_set_name": {
        "type": "string",
        "description": "Name of the comp set being viewed"
      },
      "comp_set_properties": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Property objects enriched with full data from comparables_data.json"
        },
        "description": "List of properties in the comp set with full details"
      },
      "properties_with_missing_data": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "address": {
              "type": "string"
            }
          }
        },
        "description": "List of properties in comp set that don't have full data in comparables_data.json"
      },
      "html_file_path": {
        "type": "string",
        "description": "Path to the generated HTML file (e.g., output/view_comp_set_sa-downtown.html)"
      },
      "summary": {
        "type": "object",
        "properties": {
          "total_properties": {
            "type": "integer"
          },
          "properties_with_full_data": {
            "type": "integer"
          },
          "properties_with_missing_data": {
            "type": "integer"
          }
        }
      }
    },
    "required": ["comp_set_name", "comp_set_properties", "html_file_path", "summary"],
    "additionalProperties": false
    }
  },
  "parameters": [],
  "settings": {
    "goose_provider": "anthropic",
    "goose_model": "claude-sonnet-4-20250514",
    "temperature": 0.0
  },
  "retry": {
    "max_retries": 2,
    "timeout_seconds": 30,
    "checks": [
      {
        "type": "shell",
        "command": "ls output/view_comp_set_*.html 2>/dev/null | grep -q ."
      }
    ],
    "on_failure": "echo 'Retry failed. HTML file was not generated in the output/ directory.'"
  }
}
